/*********КУРС ИНФОРМАТИКИ***********

*Project type: Win 32 console Application***********
*Project Name: LABA_2s**********
*File name: Source.cpp*********
*Language: cpp, MS VS ver 2022 and above************
*Programmer: Александрин Тимур***Ерохов Валерий*********
*Modified by:
*Created:12.03.2023*********************************
*Last revision:1.05.2023
*Commets:
***************************************************/

#include <iostream>
#include <fstream>// Подключение библиотеки для работы с файлами
using namespace std;

int const NMax = 10;
int const MMax = 10;
const char* FName = "Тест1.txt";
const char* FNameB = "Тест16.txt";

//Чтение и проверка матрицы
int inpMatr(const char* FName, int xVec[][MMax], int& xi, int& xj);

//Функция вывода ошибки
void printMess(int xErrCode, const char* FName);

//Печать матрицы
void printMatr(int xVec[][MMax], int xi, int xj);

//Функция формирования массива сумм по столбцам
void minsumm(int xVec[][MMax], int xBVec[MMax], int xi, int xj);

//Функция вывода минимальной суммы
void minprint(int xBVec[MMax], int xj, int& min);

//Функция поиска минимальной суммы
void searcingminsumm(int xBVec[MMax], int xj, int& min);


int main()
{
    setlocale(LC_ALL, "rus"); //подключение русского языка

    //Инициализация переменных
    int AVec[NMax][MMax];//Исходный массив 
    int BVec[MMax];//Массив для запоминания сумм в столбцах
    int i = 0;    //перемнная для строк матрицы
    int j = 0;    //переменная для стоблцов матрицы
    int k = 0;    //счетчик для строк
    int p = 0;    //счетчик для стоблцов
    int summ = 0;  //сумма эелемнтов столбца
    int ErrCode = 0;    //Код ошибки
    int min = -1; //минимальная сумма стобцов для проверки на изменения
    int BBMatr[NMax][MMax];//Исходный массив 
    int BBVec[MMax];//Массив для запоминания сумм в столбцах

    // функции чтения файла и вывода ошибок
    ErrCode = inpMatr(FName, AVec, i, j);
    if (ErrCode > 0)
    {
        printMess(ErrCode, FName);

    }
    else
    {
        //Вывод матрицы
        printMatr(AVec, i, j);

        //Поиск минимальной суммы
        minsumm(AVec, BVec, i, j);

        //Вывод минимальной суммы
        minprint(BVec, j, min);
    }


    ErrCode = inpMatr(FNameB, BBMatr, i, j);
    if (ErrCode > 0)
    {
        printMess(ErrCode, FNameB);

    }
    else {
        //Вывод матрицы
        printMatr(BBMatr, i, j);

        //Поиск минимальной суммы
        minsumm(BBMatr, BBVec, i, j);

        //Вывод минимальной суммы
        minprint(BBVec, j, min);
    }
    system("PAUSE");
    return 0;
}//main


//РЕАЛИЗАЦИЯ ФУНКЦИЙ

//Чтение и проверка матрицы
int inpMatr(const char* FName, int xVec[][MMax], int& xi, int& xj)
{
    int k = 0; //счетчик
    int p = 0; //счетчик

    ifstream fin(FName); //Объявление файловой переменной

    // Файл не найден
    if (!fin)
        return 1; // Выход по ошибке

    // Файл существует, можно из него читать

    //Проверка заполненности файла
    if (fin.peek() == EOF)
    {
        fin.close();
        return 2;
    }//if


    cout << "\n Чтение матрицы из файла: " << FName << endl;


    fin >> xi;  //Чтение числа элементов массива
    fin >> xj;    //Чтение числа столбцов

    cout << "\t Размер массива: " << xi << "  " << xj << endl;

    //Входной контроль

    if ((xi < 0) || (xj < 0))
    {
        return 3;
    }

    if ((xi >= NMax) || (xj >= MMax))
    {
        return 4;
    }

    //Чтение файла в массив
    for (int k = 0; k < xi; k++)
    {

        for (int p = 0; p < xj; p++)
        {

            if (fin.eof()) {
                return 5; //неожиданный конец файла
            }

            fin >> xVec[k][p];

            if (fin.fail()) //ошибка чтения из файла
                return 6;

        } //for

    }

    if (!fin.eof())
    {
        return 7;
    }// в файле присутствует не использованная информация
    cout << endl;

    fin.close();  //закрытие файла
    //system("PAUSE");
    return 0;
}//inpMatr

//Функция вывода ошибок
void printMess(int xErrCode, const char* FName) // Имя файла
{
    switch (xErrCode)
    {
    case 1: // Файл не найден
        cout << "\n Ошибка: Файл " << FName << " не найден\n";
        break;

    case 2: // Файл пустой
        cout << "\n Ошибка: Файл " << FName << " пустой\n";
        break;

    case 3: // N = 0
        cout << "\n Ошибка: Количество элементов матрицы не натуральное число\n";
        break;

    case 4: // N > NMAX
        cout << "\n Ошибка: Количество элементов матрицы больше допустимого значения\n";
        break;

    case 5: // Элементов меньше чем заявлено
        cout << "\n Ошибка: Матрица содержит меньше элементов чем заявлено\n";
        break;

    case 6: // В массиве не число
        cout << "\n Ошибка: Сбой при чтении файла " << FName << "!\n";
        break;

    case 7:
        cout << "\n Ошибка: Файл содержит больше элементов, чем заявлено \n";
        break;

    } // switch

} // PrintMiss

//Функция печати матрицы
void printMatr(int xVec[][MMax], int xi, int xj)
{
    int k; //счетчик строк
    int p; //счетчик столбцов
    //Вывод матрицы
    cout << "\t Матрица размером [" << xi << "][" << xj << "]" << endl;
    for (k = 0; k < xi; k++)            //for по строкам
    {
        for (p = 0; p < xj; p++)          //for по столбцам
        {
            cout << " " << xVec[k][p] << " ";
        }//for p
        cout << endl;
    }//for k
}//printMatr

void minsumm(int xVec[][MMax], int xBVec[MMax], int xi, int xj)

//void minsumm(int xVec[][MMax], int xBVec[MMax], int& i, int& j)

{
    int p;// счётчик для столбцов
    int k;// счётчик для строк
    //Произведём подсчёт сумм
    for (p = 0; p < xj; p++)
    {
        int summ = 0;
        for (k = 0; k < xi; k++)
        {
            if (xVec[k][p] >= 0)
            {
                summ += xVec[k][p];//Если число больше 0 увеличиваем сумму
            }
            else
            {
                xBVec[p] = -1;//Сумма всего столбца будет -1, цикл завершится 
                break;


            }//if
            xBVec[p] = summ;
        }//for

    }//for
}//minsumm


void minprint(int xBVec[MMax], int xj, int& min) {


    int p;//счетчик

    for (p = 0; p < xj; p++)//Проверка минимальной суммы
    {
        if (xBVec[p] >= 0)
        {
            min = xBVec[p];
            break;
        }//if
    }//for
    if (min == -1)//Обработка массива сумм
    {
        cout << "В каждом столбце отрицательные числа" << endl;

    }
    else
    {
        searcingminsumm(xBVec, xj, min);
        cout << " Минимальная сумма " << min << endl;
    }//if
}//minprint

void searcingminsumm(int xBVec[MMax], int xj, int& min)
{
    int p;//Счётчик строк
    for (p = 0; p < xj; p++)//Поиск мимнмальной суммы
    {
        if (min > xBVec[p] && xBVec[p] >= 0)
        {
            min = xBVec[p];
        }//if
    }//for
}//searcingminsumm
